package org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.0
 * 2024-02-15T16:48:00.895+08:00
 * Generated source version: 3.3.0
 *
 */
@WebServiceClient(name = "IDMInterface",
                  wsdlLocation = "file:/Users/lastnumber/learn/Labs/ws-lab/src/main/resources/wsdl/idminterface.wsdl",
                  targetNamespace = "http://tempuri.org/")
public class IDMInterface extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "IDMInterface");
    public final static QName IDMInterfaceHttpGet = new QName("http://tempuri.org/", "IDMInterfaceHttpGet");
    public final static QName IDMInterfaceHttpPost = new QName("http://tempuri.org/", "IDMInterfaceHttpPost");
    public final static QName IDMInterfaceSoap = new QName("http://tempuri.org/", "IDMInterfaceSoap");
    public final static QName IDMInterfaceSoap12 = new QName("http://tempuri.org/", "IDMInterfaceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/lastnumber/learn/Labs/ws-lab/src/main/resources/wsdl/idminterface.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(IDMInterface.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/lastnumber/learn/Labs/ws-lab/src/main/resources/wsdl/idminterface.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public IDMInterface(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public IDMInterface(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IDMInterface() {
        super(WSDL_LOCATION, SERVICE);
    }

    public IDMInterface(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public IDMInterface(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public IDMInterface(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns IDMInterfaceHttpGet
     */
    @WebEndpoint(name = "IDMInterfaceHttpGet")
    public IDMInterfaceHttpGet getIDMInterfaceHttpGet() {
        return super.getPort(IDMInterfaceHttpGet, IDMInterfaceHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IDMInterfaceHttpGet
     */
    @WebEndpoint(name = "IDMInterfaceHttpGet")
    public IDMInterfaceHttpGet getIDMInterfaceHttpGet(WebServiceFeature... features) {
        return super.getPort(IDMInterfaceHttpGet, IDMInterfaceHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns IDMInterfaceHttpPost
     */
    @WebEndpoint(name = "IDMInterfaceHttpPost")
    public IDMInterfaceHttpPost getIDMInterfaceHttpPost() {
        return super.getPort(IDMInterfaceHttpPost, IDMInterfaceHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IDMInterfaceHttpPost
     */
    @WebEndpoint(name = "IDMInterfaceHttpPost")
    public IDMInterfaceHttpPost getIDMInterfaceHttpPost(WebServiceFeature... features) {
        return super.getPort(IDMInterfaceHttpPost, IDMInterfaceHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns IDMInterfaceSoap
     */
    @WebEndpoint(name = "IDMInterfaceSoap")
    public IDMInterfaceSoap getIDMInterfaceSoap() {
        return super.getPort(IDMInterfaceSoap, IDMInterfaceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IDMInterfaceSoap
     */
    @WebEndpoint(name = "IDMInterfaceSoap")
    public IDMInterfaceSoap getIDMInterfaceSoap(WebServiceFeature... features) {
        return super.getPort(IDMInterfaceSoap, IDMInterfaceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns IDMInterfaceSoap
     */
    @WebEndpoint(name = "IDMInterfaceSoap12")
    public IDMInterfaceSoap getIDMInterfaceSoap12() {
        return super.getPort(IDMInterfaceSoap12, IDMInterfaceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IDMInterfaceSoap
     */
    @WebEndpoint(name = "IDMInterfaceSoap12")
    public IDMInterfaceSoap getIDMInterfaceSoap12(WebServiceFeature... features) {
        return super.getPort(IDMInterfaceSoap12, IDMInterfaceSoap.class, features);
    }

}
